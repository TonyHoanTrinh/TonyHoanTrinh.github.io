{"version":3,"sources":["images/Resume.pdf","images/LinkedInLogo.svg","images/GithubLogo.svg","images/MainSquare.jpg","components/Blog.js","components/Projects.js","components/Resume.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Blog","Projects","Resume","title","src","ResumePDF","href","download","class","ColoredLine","color","style","backgroundColor","width","height","App","className","to","type","exact","path","render","props","Fragment","LinkedInLogo","alt","GithubLogo","HomeLogo","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,yOCiB5BC,MAff,WACI,OACI,gCACI,6BACI,sCAEA,8CCMDC,MAZf,WACI,OACI,gCAEI,0CACA,+C,iBCiBGC,MArBf,WACI,OACI,gCACI,6BACI,wCAEA,4BAAQC,MAAQ,aAAaC,IAAKC,KAAlC,KAEA,uBAAGC,KAAMD,IAAWE,SAAS,0BACzB,4BAAQC,MAAM,OAAd,IAAqB,uBAAGA,MAAM,mBAA9B,gBCEdC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAChB,wBAAIC,MAAO,CACPD,MAAOA,EACPE,gBAAiBF,EACjBG,MAAO,KACPC,OAAQ,MA6IDC,MAzIf,WACE,OACE,kBAAC,IAAD,KACI,yBAAKC,UAAU,OACX,4BAAQA,UAAU,cAEd,yBAAKR,MAAM,OAEP,kBAAC,IAAD,CAAMS,GAAG,KACL,4BAAQT,MAAM,WAAWU,KAAK,UAA9B,SAKJ,kBAAC,IAAD,CAAMD,GAAG,WACL,4BAAQT,MAAM,WAAWU,KAAK,UAA9B,WAKJ,kBAAC,IAAD,CAAMD,GAAG,aACL,4BAAQT,MAAM,WAAWU,KAAK,UAA9B,aAMJ,kBAAC,IAAD,CAAMD,GAAG,SACL,4BAAQT,MAAM,WAAWU,KAAK,UAA9B,UAQZ,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAO,IAAIC,OAAU,SAAAC,GAAK,OACnC,kBAAC,IAAMC,SAAP,KACI,8CAII,uBAAGf,MAAQ,QAAQF,KAAO,0DACtB,yBAAKE,MAAQ,aAAaJ,IAAKoB,IAAcC,IAAM,kBAIvD,uBAAGjB,MAAQ,QAAQF,KAAO,oCACtB,yBAAKE,MAAQ,aAAaJ,IAAKsB,IAAYD,IAAM,iBAKzD,4BAEA,kBAAC,EAAD,CAAaf,MAAM,UAEnB,yBAAKN,IAAKuB,IAAWnB,MAAQ,OAAOiB,IAAM,aAK1C,uBAAGjB,MAAQ,eACP,kBAAC,IAAMe,SAAP,KACI,8BAFR,SAQI,kBAAC,IAAMA,SAAP,KACI,6BAEA,8BAXR,uIAkBI,kBAAC,IAAMA,SAAP,KACI,6BAEA,8BArBR,wIA4BI,kBAAC,IAAMA,SAAP,KACI,6BAEA,8BA/BR,mJAqCI,kBAAC,IAAMA,SAAP,KACI,6BAEA,8BAxCR,oOA+CI,kBAAC,IAAMA,SAAP,KACI,6BAEA,8BAlDR,mIA+DR,kBAAC,IAAD,CAAOH,KAAO,UAAUQ,UAAa1B,IACrC,kBAAC,IAAD,CAAOkB,KAAO,YAAYQ,UAAa3B,IACvC,kBAAC,IAAD,CAAOmB,KAAO,QAAQQ,UAAa5B,QC1I3B6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASb,OAAO,kBAAC,EAAD,MAASc,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.2d6f0443.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Resume.89ca82cc.pdf\";","module.exports = __webpack_public_path__ + \"static/media/LinkedInLogo.8220d480.svg\";","module.exports = __webpack_public_path__ + \"static/media/GithubLogo.76d344f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/MainSquare.a47d8011.jpg\";","import React from 'react';\n\nfunction Blog() {\n    return (\n        <header>\n            <div>\n                <h1> Blog </h1>\n\n                <p> \n                    Coming Soon!\n                </p>\n\n            </div>\n        </header>\n    )\n}\n\nexport default Blog\n","import React from 'react';\n\nfunction Projects() {\n    return (\n        <header>\n\n            <h1> Projects </h1>\n            <p> Coming Soon! </p>\n\n        </header>\n    )\n\n}\n\nexport default Projects\n","import React from 'react';\nimport ResumePDF from '../images/Resume.pdf';\n\nfunction Resume() {\n    return (\n        <header>\n            <div>\n                <h1> Resume </h1>\n                \n                <iframe title = \"ResumeView\" src={ResumePDF}> </iframe>\n\n                <a href={ResumePDF} download=\"Tony Hoan Trinh Resume\">\n                    <button class=\"btn\"> <i class=\"fa fa-download\"></i>\n                        Download\n                    </button>\n                </a>\n\n            </div>\n        </header>\n\n\n    )\n}\n\nexport default Resume\n","import './App.css';\n//import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React from 'react';\nimport LinkedInLogo from './images/LinkedInLogo.svg';\nimport GithubLogo from './images/GithubLogo.svg';\nimport HomeLogo from './images/MainSquare.jpg';\n\nimport { BrowserRouter , Route, Link } from 'react-router-dom';\n\nimport Blog from './components/Blog';\nimport Projects from './components/Projects';\nimport Resume from './components/Resume';\n\nconst ColoredLine = ({ color }) => (\n    <hr style={{\n        color: color,\n        backgroundColor: color,\n        width: 1260,\n        height: 1\n    }}/>\n);\n\nfunction App() {\n  return (\n    <BrowserRouter>\n        <div className=\"App\">\n            <header className=\"App-header\">\n\n                <div class=\"tab\">\n\n                    <Link to=\"/\">\n                        <button class=\"tablinks\" type=\"button\">\n                            Home\n                        </button>\n                    </Link>\n\n                    <Link to=\"/resume\">\n                        <button class=\"tablinks\" type=\"button\">\n                            Resume\n                        </button>\n                    </Link>\n\n                    <Link to=\"/projects\">\n                        <button class=\"tablinks\" type=\"button\">\n                            Projects\n                        </button>\n                    </Link>\n\n\n                    <Link to=\"/blog\">\n                        <button class=\"tablinks\" type=\"button\">\n                           Blog \n                        </button>\n                    </Link>\n\n\n                </div>\n\n            <Route exact path = \"/\" render = {props => (\n                <React.Fragment>\n                    <h1>\n                        Tony Hoan Trinh \n\n\n                        <a class = \"icons\" href = \"https://www.linkedin.com/in/tony-hoan-trinh-965408168/\">\n                            <img class = \"linkimages\" src={LinkedInLogo} alt = \"LinkedInLogo\"/>\n                        </a>\n\n\n                        <a class = \"icons\" href = \"https://github.com/TonyHoanTrinh\">\n                            <img class = \"linkimages\" src={GithubLogo} alt = \"GitHubLogo\"/>\n                        </a>\n                    </h1>\n\n\n                    <p>\n                    </p>\n                    <ColoredLine color=\"black\" />\n\n                    <img src={HomeLogo}  class = \"main\" alt = \"HomeLogo\"/>\n\n\n\n\n                    <p class = \"information\">\n                        <React.Fragment>\n                            <br>\n                            </br>\n                        </React.Fragment>\n\n\n                        Hello!\n                        <React.Fragment>\n                            <br>\n                            </br>\n                            <br>\n                            </br>\n                        </React.Fragment>\n\n\n                        I'm a 2nd year Coop Computer Science Student at the University of Guelph with a major in Computer Science and a minor in Statistics.\n\n                        <React.Fragment>\n                            <br>\n                            </br>\n                            <br>\n                            </br>\n                        </React.Fragment>\n\n\n                        I just recently finished a Research Assistantship in the Summer and a TAship and another Research Assistantship in the Fall Semester.\n\n                        <React.Fragment>\n                            <br>\n                            </br>\n                            <br>\n                            </br>\n                        </React.Fragment>\n\n\n                        I am currently the VP Finance of the Society of Computing and Information Science (SOCIS) and Co-Organizer of the Guelph Coding Community (GCC).\n                        <React.Fragment>\n                            <br>\n                            </br>\n                            <br>\n                            </br>\n                        </React.Fragment>\n\n\n                        I am interested in Machine Learning with a focus on Reinforcement Learning and other topics such as Discrete Mathematics, Math Visualizations and Blockchain and constantly looking for new opportunities to expand my knowledge!\n\n                        <React.Fragment>\n                            <br>\n                            </br>\n                            <br>\n                            </br>\n                        </React.Fragment>\n\n\n                        Outside of work I like to read, meditate, play guitar, watch and play basketball and volunteer at my local Buddhist temple!\n\n                    </p>\n\n                </React.Fragment>\n            )}/>\n\n\n            <Route path = \"/resume\" component = {Resume} />\n            <Route path = \"/projects\" component = {Projects} />\n            <Route path = \"/blog\" component = {Blog} />\n\n        </header>\n\n        </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}